{
    "created": 1729856938.7711146,
    "duration": 0.4780147075653076,
    "exitcode": 1,
    "root": "C:\\Users\\RH\\Documents\\GitHub\\readnupdate-test",
    "environment": {},
    "summary": { "passed": 1, "failed": 6, "total": 7, "collected": 7 },
    "collectors": [
        {
            "nodeid": "",
            "outcome": "passed",
            "result": [{ "nodeid": "src/python_testcases", "type": "Package" }]
        },
        {
            "nodeid": "src/python_testcases/test_bucketsort.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/python_testcases/test_bucketsort.py::test_bucketsort[input_data0-expected0]",
                    "type": "Function",
                    "lineno": 6
                },
                {
                    "nodeid": "src/python_testcases/test_bucketsort.py::test_bucketsort[input_data1-expected1]",
                    "type": "Function",
                    "lineno": 6
                },
                {
                    "nodeid": "src/python_testcases/test_bucketsort.py::test_bucketsort[input_data2-expected2]",
                    "type": "Function",
                    "lineno": 6
                },
                {
                    "nodeid": "src/python_testcases/test_bucketsort.py::test_bucketsort[input_data3-expected3]",
                    "type": "Function",
                    "lineno": 6
                },
                {
                    "nodeid": "src/python_testcases/test_bucketsort.py::test_bucketsort[input_data4-expected4]",
                    "type": "Function",
                    "lineno": 6
                },
                {
                    "nodeid": "src/python_testcases/test_bucketsort.py::test_bucketsort[input_data5-expected5]",
                    "type": "Function",
                    "lineno": 6
                },
                {
                    "nodeid": "src/python_testcases/test_bucketsort.py::test_bucketsort[input_data6-expected6]",
                    "type": "Function",
                    "lineno": 6
                }
            ]
        },
        {
            "nodeid": "src/python_testcases",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "src/python_testcases/test_bucketsort.py",
                    "type": "Module"
                }
            ]
        }
    ],
    "tests": [
        {
            "nodeid": "src/python_testcases/test_bucketsort.py::test_bucketsort[input_data0-expected0]",
            "lineno": 6,
            "outcome": "passed",
            "keywords": [
                "test_bucketsort[input_data0-expected0]",
                "parametrize",
                "pytestmark",
                "input_data0-expected0",
                "test_bucketsort.py",
                "python_testcases",
                "src",
                "readnupdate-test",
                ""
            ],
            "setup": { "duration": 0.17020479997154325, "outcome": "passed" },
            "call": { "duration": 0.00042459997348487377, "outcome": "passed" },
            "teardown": {
                "duration": 0.0005407000426203012,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/python_testcases/test_bucketsort.py::test_bucketsort[input_data1-expected1]",
            "lineno": 6,
            "outcome": "failed",
            "keywords": [
                "test_bucketsort[input_data1-expected1]",
                "parametrize",
                "pytestmark",
                "input_data1-expected1",
                "test_bucketsort.py",
                "python_testcases",
                "src",
                "readnupdate-test",
                ""
            ],
            "setup": {
                "duration": 0.00040019990410655737,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.08940879988949746,
                "outcome": "failed",
                "crash": {
                    "path": "C:\\Users\\RH\\Documents\\GitHub\\readnupdate-test\\src\\python_testcases\\test_bucketsort.py",
                    "lineno": 9,
                    "message": "assert [0, 0, 0, 1, 1, 1, ...] == [1, 2, 3, 5, 9, 11]\n  \n  At index 0 diff: \u001b[0m\u001b[94m0\u001b[39;49;00m\u001b[90m\u001b[39;49;00m != \u001b[0m\u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  Left contains 25 more items, first extra item: \u001b[0m\u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  Use -v to get more diff"
                },
                "traceback": [
                    {
                        "path": "src\\python_testcases\\test_bucketsort.py",
                        "lineno": 9,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "input_data = [[3, 11, 2, 9, 1, 5], 12], expected = [1, 2, 3, 5, 9, 11]\n\n    @pytest.mark.parametrize(\"input_data,expected\", testdata)\n    def test_bucketsort(input_data, expected):\n>       assert bucketsort(*input_data) == expected\nE       assert [0, 0, 0, 1, 1, 1, ...] == [1, 2, 3, 5, 9, 11]\nE         \nE         At index 0 diff: \u001b[0m\u001b[94m0\u001b[39;49;00m\u001b[90m\u001b[39;49;00m != \u001b[0m\u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE         Left contains 25 more items, first extra item: \u001b[0m\u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE         Use -v to get more diff\n\nsrc\\python_testcases\\test_bucketsort.py:9: AssertionError"
            },
            "teardown": {
                "duration": 0.0003477999707683921,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/python_testcases/test_bucketsort.py::test_bucketsort[input_data2-expected2]",
            "lineno": 6,
            "outcome": "failed",
            "keywords": [
                "test_bucketsort[input_data2-expected2]",
                "parametrize",
                "pytestmark",
                "input_data2-expected2",
                "test_bucketsort.py",
                "python_testcases",
                "src",
                "readnupdate-test",
                ""
            ],
            "setup": { "duration": 0.0003003000747412443, "outcome": "passed" },
            "call": {
                "duration": 0.0009097999427467585,
                "outcome": "failed",
                "crash": {
                    "path": "C:\\Users\\RH\\Documents\\GitHub\\readnupdate-test\\src\\python_testcases\\test_bucketsort.py",
                    "lineno": 9,
                    "message": "assert [0, 0, 0, 1, 1, 2, ...] == [2, 2, 3, 3, 4, 5]\n  \n  At index 0 diff: \u001b[0m\u001b[94m0\u001b[39;49;00m\u001b[90m\u001b[39;49;00m != \u001b[0m\u001b[94m2\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  Left contains 13 more items, first extra item: \u001b[0m\u001b[94m2\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  Use -v to get more diff"
                },
                "traceback": [
                    {
                        "path": "src\\python_testcases\\test_bucketsort.py",
                        "lineno": 9,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "input_data = [[3, 2, 4, 2, 3, 5], 6], expected = [2, 2, 3, 3, 4, 5]\n\n    @pytest.mark.parametrize(\"input_data,expected\", testdata)\n    def test_bucketsort(input_data, expected):\n>       assert bucketsort(*input_data) == expected\nE       assert [0, 0, 0, 1, 1, 2, ...] == [2, 2, 3, 3, 4, 5]\nE         \nE         At index 0 diff: \u001b[0m\u001b[94m0\u001b[39;49;00m\u001b[90m\u001b[39;49;00m != \u001b[0m\u001b[94m2\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE         Left contains 13 more items, first extra item: \u001b[0m\u001b[94m2\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE         Use -v to get more diff\n\nsrc\\python_testcases\\test_bucketsort.py:9: AssertionError"
            },
            "teardown": {
                "duration": 0.0003554000286385417,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/python_testcases/test_bucketsort.py::test_bucketsort[input_data3-expected3]",
            "lineno": 6,
            "outcome": "failed",
            "keywords": [
                "test_bucketsort[input_data3-expected3]",
                "parametrize",
                "pytestmark",
                "input_data3-expected3",
                "test_bucketsort.py",
                "python_testcases",
                "src",
                "readnupdate-test",
                ""
            ],
            "setup": {
                "duration": 0.00034280004911124706,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.000916499993763864,
                "outcome": "failed",
                "crash": {
                    "path": "C:\\Users\\RH\\Documents\\GitHub\\readnupdate-test\\src\\python_testcases\\test_bucketsort.py",
                    "lineno": 9,
                    "message": "assert [0, 1, 1, 1, 2, 2, ...] == [1, 1, 2, 2, 3, 4, ...]\n  \n  At index 0 diff: \u001b[0m\u001b[94m0\u001b[39;49;00m\u001b[90m\u001b[39;49;00m != \u001b[0m\u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  Left contains 31 more items, first extra item: \u001b[0m\u001b[94m3\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  Use -v to get more diff"
                },
                "traceback": [
                    {
                        "path": "src\\python_testcases\\test_bucketsort.py",
                        "lineno": 9,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "input_data = [[1, 3, 4, 6, 4, 2, ...], 10], expected = [1, 1, 2, 2, 3, 4, ...]\n\n    @pytest.mark.parametrize(\"input_data,expected\", testdata)\n    def test_bucketsort(input_data, expected):\n>       assert bucketsort(*input_data) == expected\nE       assert [0, 1, 1, 1, 2, 2, ...] == [1, 1, 2, 2, 3, 4, ...]\nE         \nE         At index 0 diff: \u001b[0m\u001b[94m0\u001b[39;49;00m\u001b[90m\u001b[39;49;00m != \u001b[0m\u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE         Left contains 31 more items, first extra item: \u001b[0m\u001b[94m3\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE         Use -v to get more diff\n\nsrc\\python_testcases\\test_bucketsort.py:9: AssertionError"
            },
            "teardown": {
                "duration": 0.0003538000164553523,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/python_testcases/test_bucketsort.py::test_bucketsort[input_data4-expected4]",
            "lineno": 6,
            "outcome": "failed",
            "keywords": [
                "test_bucketsort[input_data4-expected4]",
                "parametrize",
                "pytestmark",
                "input_data4-expected4",
                "test_bucketsort.py",
                "python_testcases",
                "src",
                "readnupdate-test",
                ""
            ],
            "setup": { "duration": 0.0003245000261813402, "outcome": "passed" },
            "call": {
                "duration": 0.0008146000327542424,
                "outcome": "failed",
                "crash": {
                    "path": "C:\\Users\\RH\\Documents\\GitHub\\readnupdate-test\\src\\python_testcases\\test_bucketsort.py",
                    "lineno": 9,
                    "message": "assert [0, 0, 0, 0, 0, 0, ...] == [11, 12, 13, 14, 15, 16, ...]\n  \n  At index 0 diff: \u001b[0m\u001b[94m0\u001b[39;49;00m\u001b[90m\u001b[39;49;00m != \u001b[0m\u001b[94m11\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  Left contains 145 more items, first extra item: \u001b[0m\u001b[94m0\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  Use -v to get more diff"
                },
                "traceback": [
                    {
                        "path": "src\\python_testcases\\test_bucketsort.py",
                        "lineno": 9,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "input_data = [[20, 19, 18, 17, 16, 15, ...], 21], expected = [11, 12, 13, 14, 15, 16, ...]\n\n    @pytest.mark.parametrize(\"input_data,expected\", testdata)\n    def test_bucketsort(input_data, expected):\n>       assert bucketsort(*input_data) == expected\nE       assert [0, 0, 0, 0, 0, 0, ...] == [11, 12, 13, 14, 15, 16, ...]\nE         \nE         At index 0 diff: \u001b[0m\u001b[94m0\u001b[39;49;00m\u001b[90m\u001b[39;49;00m != \u001b[0m\u001b[94m11\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE         Left contains 145 more items, first extra item: \u001b[0m\u001b[94m0\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE         Use -v to get more diff\n\nsrc\\python_testcases\\test_bucketsort.py:9: AssertionError"
            },
            "teardown": {
                "duration": 0.00036239996552467346,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/python_testcases/test_bucketsort.py::test_bucketsort[input_data5-expected5]",
            "lineno": 6,
            "outcome": "failed",
            "keywords": [
                "test_bucketsort[input_data5-expected5]",
                "parametrize",
                "pytestmark",
                "input_data5-expected5",
                "test_bucketsort.py",
                "python_testcases",
                "src",
                "readnupdate-test",
                ""
            ],
            "setup": { "duration": 0.0003035000991076231, "outcome": "passed" },
            "call": {
                "duration": 0.000991599983535707,
                "outcome": "failed",
                "crash": {
                    "path": "C:\\Users\\RH\\Documents\\GitHub\\readnupdate-test\\src\\python_testcases\\test_bucketsort.py",
                    "lineno": 9,
                    "message": "assert [0, 0, 0, 0, 0, 0, ...] == [20, 21, 22, 23, 24, 25, ...]\n  \n  At index 0 diff: \u001b[0m\u001b[94m0\u001b[39;49;00m\u001b[90m\u001b[39;49;00m != \u001b[0m\u001b[94m20\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  Left contains 235 more items, first extra item: \u001b[0m\u001b[94m0\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  Use -v to get more diff"
                },
                "traceback": [
                    {
                        "path": "src\\python_testcases\\test_bucketsort.py",
                        "lineno": 9,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "input_data = [[20, 21, 22, 23, 24, 25, ...], 30], expected = [20, 21, 22, 23, 24, 25, ...]\n\n    @pytest.mark.parametrize(\"input_data,expected\", testdata)\n    def test_bucketsort(input_data, expected):\n>       assert bucketsort(*input_data) == expected\nE       assert [0, 0, 0, 0, 0, 0, ...] == [20, 21, 22, 23, 24, 25, ...]\nE         \nE         At index 0 diff: \u001b[0m\u001b[94m0\u001b[39;49;00m\u001b[90m\u001b[39;49;00m != \u001b[0m\u001b[94m20\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE         Left contains 235 more items, first extra item: \u001b[0m\u001b[94m0\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE         Use -v to get more diff\n\nsrc\\python_testcases\\test_bucketsort.py:9: AssertionError"
            },
            "teardown": {
                "duration": 0.0004545999690890312,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "src/python_testcases/test_bucketsort.py::test_bucketsort[input_data6-expected6]",
            "lineno": 6,
            "outcome": "failed",
            "keywords": [
                "test_bucketsort[input_data6-expected6]",
                "parametrize",
                "pytestmark",
                "input_data6-expected6",
                "test_bucketsort.py",
                "python_testcases",
                "src",
                "readnupdate-test",
                ""
            ],
            "setup": { "duration": 0.0004007000243291259, "outcome": "passed" },
            "call": {
                "duration": 0.0009363000281155109,
                "outcome": "failed",
                "crash": {
                    "path": "C:\\Users\\RH\\Documents\\GitHub\\readnupdate-test\\src\\python_testcases\\test_bucketsort.py",
                    "lineno": 9,
                    "message": "assert [0, 0, 0, 0, 0, 0, ...] == [0, 1, 2, 3, 4, 5, ...]\n  \n  At index 1 diff: \u001b[0m\u001b[94m0\u001b[39;49;00m\u001b[90m\u001b[39;49;00m != \u001b[0m\u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  Left contains 39 more items, first extra item: \u001b[0m\u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  Use -v to get more diff"
                },
                "traceback": [
                    {
                        "path": "src\\python_testcases\\test_bucketsort.py",
                        "lineno": 9,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "input_data = [[8, 5, 3, 1, 9, 6, ...], 10], expected = [0, 1, 2, 3, 4, 5, ...]\n\n    @pytest.mark.parametrize(\"input_data,expected\", testdata)\n    def test_bucketsort(input_data, expected):\n>       assert bucketsort(*input_data) == expected\nE       assert [0, 0, 0, 0, 0, 0, ...] == [0, 1, 2, 3, 4, 5, ...]\nE         \nE         At index 1 diff: \u001b[0m\u001b[94m0\u001b[39;49;00m\u001b[90m\u001b[39;49;00m != \u001b[0m\u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE         Left contains 39 more items, first extra item: \u001b[0m\u001b[94m1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE         Use -v to get more diff\n\nsrc\\python_testcases\\test_bucketsort.py:9: AssertionError"
            },
            "teardown": {
                "duration": 0.000520200002938509,
                "outcome": "passed"
            }
        }
    ]
}

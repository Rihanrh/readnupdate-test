name: Update Failed Implementation

on:
    pull_request:
        branches:
            - main
    issue_comment:
        types: [created]

permissions:
    contents: write
    pull-requests: write

jobs:
    check-branch-status:
        # Run this job only when a pull request is opened or an issue comment is created
        if: |
            github.event_name == 'pull_request' || 
            (github.event_name == 'issue_comment' && 
            github.event.issue.pull_request && 
            contains(github.event.issue.labels.*.name, 'AIFIX'))
        runs-on: ubuntu-latest
        outputs:
            is_aifix: ${{ steps.check_branch.outputs.is_aifix }}
            should_create_pr: ${{ steps.check_pr.outputs.should_create_pr }}
            feedback_comment: ${{ steps.get_feedback.outputs.comment }}
        steps:
            - name: Check if branch is AI-generated
              id: check_branch
              run: |
                if [[ "${{ github.head_ref }}" == *"-AIFIX-"* ]]; then
                  echo "is_aifix=true" >> $GITHUB_OUTPUT
                else
                  echo "is_aifix=false" >> $GITHUB_OUTPUT
                fi

            - name: Get Latest Feedback Comment
              id: get_feedback
              if: github.event_name == 'issue_comment'
              run: |
                if [[ "${{ github.event.comment.body }}" == *"[FEEDBACK]"* ]]; then
                  echo "comment=${{ github.event.comment.body }}" >> $GITHUB_OUTPUT
                  echo "Feedback comment found"
                else
                  echo "comment=" >> $GITHUB_OUTPUT
                  echo "No feedback comment found"
                fi

            - name: Check Pull Request Status
              id: check_pr
              if: steps.check_branch.outputs.is_aifix == 'true'
              run: |
                # Get PR title
                pr_title="${{ github.event.pull_request.title }}"
                # Allow PR creation if there's feedback or if it's not an automated PR
                if [[ "$pr_title" == "[AIFIX]"* && "${{ steps.get_feedback.outputs.comment }}" == "" ]]; then
                  echo "should_create_pr=false" >> $GITHUB_OUTPUT
                  echo "This is an automated Pull Request without feedback. Preventing infinite loop."
                else
                  echo "should_create_pr=true" >> $GITHUB_OUTPUT
                  echo "Human changes or feedback detected, will create PR if needed"
                fi

    run-tests:
        needs: check-branch-status
        runs-on: ubuntu-latest
        outputs:
            pytest_failed: ${{ steps.pytest_status.outputs.pytest_failed }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                python-version: 3.10.4

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt

            - name: Ensure pytest_report directory exists
              run: mkdir -p pytest_report

            - name: Run pytest
              run: |
                pytest
              continue-on-error: true
              id: pytest_result

            - name: Check pytest status
              id: pytest_status
              run: |
                if [[ "${{ steps.pytest_result.outcome }}" == "failure" ]]; then
                  echo "pytest_failed=true" >> $GITHUB_OUTPUT
                else
                  echo "pytest_failed=false" >> $GITHUB_OUTPUT
                fi

            - name: Comment Test Results of an AI Fix
              if: needs.check-branch-status.outputs.is_aifix == 'true'
              run: |
                gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
                if [[ "${{ steps.pytest_status.outputs.pytest_failed }}" == "true" ]]; then
                  gh pr comment "${{ github.event.pull_request.number }}" --body "⚠️ Tests failed for this AI fix ⚠️
                  You can provide feedback for another attempt by commenting with '[FEEDBACK] your feedback here'."
                else
                  gh pr comment "${{ github.event.pull_request.number }}" --body "✅ Tests passed successfully! The AI-assisted fixes have resolved the issues."
                fi

            - name: Create AI Fix Branch
              id: create_branch
              if: |
                steps.pytest_status.outputs.pytest_failed == 'true' && 
                needs.check-branch-status.outputs.is_aifix == 'false'
              run: |
                original_branch="${{ github.head_ref }}"
                branch_name="${original_branch}-AIFIX-${{ github.event.pull_request.number }}"
                git checkout -b $branch_name
                git push -u origin $branch_name
                echo "$branch_name" > ai_fix_branch.txt
                echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

            - name : Upload branch name artifact
              if: steps.create_branch.outcome == 'success'
              uses: actions/upload-artifact@v4
              with:
                name: ai-fix-branch
                path: ai_fix_branch.txt

            - name: Upload pytest report artifact
              uses: actions/upload-artifact@v4
              with:
                name: pytest-report
                path: src/pytest_report/report.json

    update-implementation:
        needs: [check-branch-status, run-tests]
        if: |
          (needs.run-tests.outputs.pytest_failed == 'true' && needs.check-branch-status.outputs.is_aifix == 'false') ||
          (needs.check-branch-status.outputs.feedback_comment != '' && needs.check-branch-status.outputs.is_aifix == 'true')
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup for existing AI branch
              if: needs.check-branch-status.outputs.is_aifix == 'true'
              run: |
                current_branch="${{ github.head_ref }}"
                echo "$current_branch" > ai_fix_branch.txt

            - name: Download ai-fix-branch artifact
              if: needs.check-branch-status.outputs.is_aifix == 'false'
              uses: actions/download-artifact@v4
              with:
                name: ai-fix-branch

            - name: Download pytest report artifact
              uses: actions/download-artifact@v4
              with:
                name: pytest-report
                path: pytest_report

            - name: Read AI Fix Branch Name
              id: read_branch
              run: |
                branch_name=$(cat ai_fix_branch.txt)
                echo "target_branch=$branch_name" >> $GITHUB_OUTPUT
                echo "Branch name from file: $branch_name"

            - name: Update implementation file
              uses: ./ # Uses the action in the root directory
              env:
                OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                ASSISTANT_ID: ${{ secrets.ASSISTANT_ID }}
              with:
                target-branch: ${{ steps.read_branch.outputs.target_branch }}
                github-token: ${{ secrets.GITHUB_TOKEN }}
                commit-message: "[AIFIX] fix for failed tests"
                feedback: ${{ needs.check-branch-status.outputs.feedback_comment }}
            
            - name: Create Pull Request
              if: |
                needs.check-branch-status.outputs.is_aifix == 'false' || 
                (needs.check-branch-status.outputs.is_aifix == 'true' && 
                needs.check-branch-status.outputs.should_create_pr == 'true')
              run: |
                gh auth login --with-token <<< "${{ secrets.PAT_TOKEN }}"
                gh pr create \
                  --base main \
                  --head ${{ steps.read_branch.outputs.target_branch }} \
                  --title "[AIFIX] fix for PR #${{ github.event.pull_request.number }}" \
                  --body "This is an AI-generated fix for the failed tests in PR #${{ github.event.pull_request.number }}."
                  --label "AIFIX"

            - name: Close Original Pull Request
              if: needs.check-branch-status.outputs.is_aifix == 'false'
              run: |
                gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
                gh pr close ${{ github.event.pull_request.number }} --comment "Closing this PR as an AI-assisted fix has been created in branch ${{ steps.read_branch.outputs.target_branch }}. Please review the new changes there."

name: Process Feedback

on:
    issue_comment:
        types: [created]

permissions:
    contents: write
    actions: write
    pull-requests: write

jobs:
    process-feedback:
        if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '[FEEDBACK]') }}
        runs-on: ubuntu-latest
        steps:
            - name: React to comment
              uses: peter-evans/create-or-update-comment@v2
              with:
                comment-id: ${{ github.event.comment.id }}
                reactions: '+1'

            - name: Notify processing started
              uses: peter-evans/create-or-update-comment@v2
              with:
                issue-number: ${{ github.event.issue.number }}
                body: "üìù Received feedback! Processing code changes..."
            
            - name: Get PR details
              id: pr_details
              run: |
                gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
                pr_data=$(gh pr view ${{ github.event.issue.number }} --json headRefName,headRepository,headRefOid)
                echo "sha=$(echo "$pr_data" | jq -r .headRefOid)" >> $GITHUB_OUTPUT

            - name: Download pytest report
              uses: actions/download-artifact@v4
              with:
                name: pytest-report
                path: pytest_report
                github-token: ${{ secrets.GITHUB_TOKEN }}
                run-id: ${{ steps.pr_details.outputs.sha }}

            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Get PR branch
              id: get_pr_branch
              run: |
                # Get PR branch name
                gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
                pr_data=$(gh pr view ${{ github.event.issue.number }} --json headRefName,title)
                branch_name=$(echo $pr_data | jq -r .headRefName)
                
                # Verify this is an AIFIX branch
                if [[ "$branch_name" != *"-AIFIX-"* ]]; then
                  echo "Error: Feedback only works on AIFIX branches"
                  exit 1
                fi
                
                echo "branch=$branch_name" >> $GITHUB_OUTPUT
                
                # Checkout the PR branch
                git fetch origin $branch_name
                git checkout $branch_name

            - name: Run update implementation
              uses: ./ # Uses the action in the root directory
              env:
                OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                ASSISTANT_ID: ${{ secrets.ASSISTANT_ID }}
              with:
                target-branch: ${{ steps.get_pr_branch.outputs.branch }}
                github-token: ${{ secrets.GITHUB_TOKEN }}
                commit-message: "[AIFIX] Applying feedback from comment"
                feedback: ${{ github.event.comment.body }}
            
            - name: Notify processing complete
              uses: peter-evans/create-or-update-comment@v2
              with:
                issue-number: ${{ github.event.issue.number }}
                body: "‚úÖ Code has been processed with the provided feedback. New changes have been pushed to the branch."

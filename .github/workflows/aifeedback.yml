name: Process Feedback

on:
    issue_comment:
        types: [created]

permissions:
    contents: write
    actions: write
    pull-requests: write

jobs:
    process-feedback:
        if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '[FEEDBACK]') }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Get PR branch
              id: get_pr_branch
              run: |
                # Get original PR branch name
                gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
                pr_data=$(gh pr view ${{ github.event.issue.number }} --json headRefName,title)
                original_branch=$(echo $pr_data | jq -r .headRefName)
                
                # Create new branch with timestamp
                timestamp=$(date +%s)
                new_branch="${original_branch}-feedback-${timestamp}"
                
                # Create and checkout new branch
                git checkout -b $new_branch
                git push origin $new_branch
                
                echo "branch=$new_branch" >> $GITHUB_OUTPUT

            - name: Run update implementation
              uses: ./ # Uses the action in the root directory
              env:
                OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                ASSISTANT_ID: ${{ secrets.ASSISTANT_ID }}
              with:
                target-branch: ${{ steps.get_pr_branch.outputs.branch }}
                github-token: ${{ secrets.GITHUB_TOKEN }}
                commit-message: "[AIFIX] Applying feedback from comment"
                feedback: ${{ github.event.comment.body }}
            
            - name: Create New Pull Request
              run: |
                gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
                
                # Create new PR
                gh pr create \
                  --base main \
                  --head ${{ steps.get_pr_branch.outputs.branch }} \
                  --title "[AIFIX] Feedback implementation for PR #${{ github.event.issue.number }}" \
                  --body "This is an AI-generated fix based on feedback in PR #${{ github.event.issue.number }}. Original feedback: ${{ github.event.comment.body }}"

            - name: Close Original PR
              run: |
                gh pr close ${{ github.event.issue.number }} --comment "Creating new PR with feedback implementation. Please check the new PR."
